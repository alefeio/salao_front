{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/in-memory-task-data.service.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/navbar/task-search/task-search.component.css","webpack:///./src/app/navbar/task-search/task-search.component.html","webpack:///./src/app/navbar/task-search/task-search.component.ts","webpack:///./src/app/shared/form.utils.ts","webpack:///./src/app/sign-in-form/sign-in-form.component.html","webpack:///./src/app/sign-in-form/sign-in-form.component.ts","webpack:///./src/app/sign-up-form/sign-up-form.component.html","webpack:///./src/app/sign-up-form/sign-up-form.component.ts","webpack:///./src/app/tasks/shared/task.model.ts","webpack:///./src/app/tasks/shared/task.service.ts","webpack:///./src/app/tasks/task-detail/task-detail.component.html","webpack:///./src/app/tasks/task-detail/task-detail.component.ts","webpack:///./src/app/tasks/tasks.component.html","webpack:///./src/app/tasks/tasks.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskDetailComponent } from './tasks/task-detail/task-detail.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { signUpFormComponent } from './sign-up-form/sign-up-form.component';\nimport { signInFormComponent } from './sign-in-form/sign-in-form.component';\n\nconst ROUTES = RouterModule.forRoot([\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'tasks', component: TasksComponent },\n  { path: 'tasks/:id', component: TaskDetailComponent },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'sign-up', component: signUpFormComponent },\n  { path: 'sign-in', component: signInFormComponent }\n])\n\n@NgModule({\n  imports: [ROUTES],\n  exports: [RouterModule] \n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<navbar></navbar>\\n<div class=\\\"container\\\">\\n<router-outlet></router-outlet>\\n</div>\"","import { Angular2TokenService } from 'angular2-token';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Projeto Teste'\r\n\r\n  public constructor(private tokenService: Angular2TokenService) {\r\n    this.tokenService.init({\r\n      apiBase: 'http://misslaura.herokuapp.com'\r\n    })\r\n  }\r\n}","// Angular imports\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { HttpModule } from '@angular/http'\n \n// Components imports\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskDetailComponent } from './tasks/task-detail/task-detail.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TaskSearchComponent } from './navbar/task-search/task-search.component';\nimport { signUpFormComponent } from './sign-up-form/sign-up-form.component';\n\n// Services imports \nimport { TaskService } from './tasks/shared/task.service';\n\n// modules imports\nimport { AppRoutingModule } from './app-routing.module'\n\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryTaskDataService } from './in-memory-task-data.service';\n\nimport * as $ from 'jquery'\nimport * as datetimepicker from 'eonasdan-bootstrap-datetimepicker'\nimport { signInFormComponent } from './sign-in-form/sign-in-form.component';\nimport { Angular2TokenService } from 'angular2-token'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    TasksComponent,\n    TaskDetailComponent,\n    DashboardComponent,\n    TaskSearchComponent,\n    signUpFormComponent,\n    signInFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    AppRoutingModule,\n    InMemoryWebApiModule.forRoot(InMemoryTaskDataService)\n  ],\n  providers: [\n    TaskService,\n    Angular2TokenService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h1 class=\\\"page-header\\\">Dashboard </h1>\\n\\n<table class=\\\"table\\\">\\n    <thead>\\n        <tr> \\n            <th>Tarefa</th>\\n            <th>Ações</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let task of tasks\\\">\\n            <td>{{task.titulo}}</td>\\n            <td><button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/tasks', task.id]\\\">Detalhes</button></td>\\n        </tr>\\n    </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core'\n\nimport { TaskService } from '../tasks/shared/task.service'\nimport { Task } from '../tasks/shared/task.model';\n\n@Component({\n    selector: 'dashboard',\n    templateUrl: './dashboard.component.html'\n})\n\nexport class DashboardComponent implements OnInit {\n    public tasks: Task[]\n\n    public constructor(private taskService: TaskService){}\n\n    ngOnInit(){\n        this.taskService.getImportant()\n            .subscribe(\n                tasks => this.tasks = tasks,\n                error => alert('Ocorreu um erro no servidor. Tente mais tarde!')\n            )\n    }\n}","import { Injectable } from '@angular/core'\n\nimport { InMemoryDbService } from 'angular-in-memory-web-api'\n\n@Injectable()\n\nexport class InMemoryTaskDataService implements InMemoryDbService {\n    public createDb() {\n        let tasks = [\n            { id: 1, titulo: 'Comprar um celular novo' },\n            { id: 2, titulo: 'Pagar faculdade' },\n            { id: 3, titulo: 'Pagar aditamento do Fies' },\n            { id: 4, titulo: 'Fazer aditamento do Fies' },\n            { id: 5, titulo: 'Assistir aulas online' }\n        ]\n\n        return { tasks }\n    }\n}","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Projeto Teste </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#conteudoNavbarSuportado\\\" aria-controls=\\\"conteudoNavbarSuportado\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Alterna navegação\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"conteudoNavbarSuportado\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/tasks\\\">Tasks</a>\\n        </li>\\n        <!-- <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Dropdown\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Ação</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Outra ação</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Algo mais aqui</a>\\n          </div>\\n        </li> -->\\n        <!-- <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Desativado</a>\\n        </li> -->\\n      </ul>\\n      <div class=\\\"form-inline my-2 my-lg-0\\\">\\n        <task-search></task-search>\\n      </div>\\n    </div>\"","import { Component } from '@angular/core'\n\n@Component({\n    selector: 'navbar',\n    templateUrl: './navbar.component.html'\n})\n\nexport class NavbarComponent {\n    \n}","module.exports = \"a{\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL3Rhc2stc2VhcmNoL3Rhc2stc2VhcmNoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9uYXZiYXIvdGFzay1zZWFyY2gvdGFzay1zZWFyY2guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImF7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","module.exports = \"<div style=\\\"position:relative\\\">\\n    <input #searchInput (keyup)=\\\"search(searchInput.value)\\\" class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Buscar tarefas\\\" aria-label=\\\"Buscar tarefas\\\">\\n    <ul *ngIf=\\\"tasks\\\" class=\\\"list-group\\\" style=\\\"position: absolute; width: 100%; z-index: 100;\\\">\\n        <li href=\\\"\\\" class=\\\"list-group-item\\\" *ngFor=\\\"let task of tasks\\\"><a (click)=\\\"gotoTask(task)\\\">{{task.titulo}}</a></li>\\n    </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core'\n\nimport { Task } from '../../tasks/shared/task.model'\nimport { TaskService } from '../../tasks/shared/task.service'\nimport { Subject, Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'task-search',\n    templateUrl: './task-search.component.html',\n    styleUrls: ['./task-search.component.css']\n})\n\nexport class TaskSearchComponent implements OnInit {\n\n    public searchTerms: Subject<string> = new Subject()\n    public tasks: Task[] = []\n\n    public constructor(private taskService: TaskService, private router: Router){}\n\n    ngOnInit(){\n        this.searchTerms\n            .pipe(\n                debounceTime(300),\n                distinctUntilChanged(),\n                switchMap(termo => termo ? this.taskService.searchByTitle(termo) : of<Task[]>([]))\n            )\n            .subscribe(tasks => this.tasks = tasks)\n    }\n\n    public search(termo: string) {\n        // console.log(termo)\n        this.searchTerms.next(termo)\n    }\n\n    public gotoTask(task: Task){\n        this.tasks = []\n        this.router.navigate(['/tasks', task.id])\n    }\n}","import { FormGroup } from \"@angular/forms\";\n\nexport class FormUtils {\n    public constructor(private form: FormGroup) { }\n\n    public fieldClassForErrorOrSuccess(fieldName: string) {\n        return {\n            \"text-danger\": this.showFieldError(fieldName),\n            \"text-success\": this.getField(fieldName).valid\n        }\n    }\n\n    public iconClassForErrorOrSuccess(fieldName: string) {\n        return {\n            \"fa fa-times\": this.showFieldError(fieldName),\n            \"fa fa-check\": this.getField(fieldName).valid\n        }\n    }\n\n    public showFieldError(field): boolean {\n        return field.invalid && (field.touched || field.dirty)\n    }\n\n    public getField(fieldName: string) {\n        return this.form.get(fieldName)\n    }\n}","module.exports = \"<h1>Faça o seu Login</h1>\\n<div class=\\\"jumbotron\\\">\\n    <form class=\\\"text-right\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"signInUser()\\\">\\n        <div class=\\\"form-group row\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('email')\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\n\\n                <div *ngIf=\\\"formUtils.showFieldError(form.get('email'))\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"form.get('email').errors.required\\\">Campo obrigatório</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('senha')\\\">\\n            <label for=\\\"senha\\\" class=\\\"col-sm-2 col-form-label\\\">Senha</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"password\\\" formControlName=\\\"senha\\\" class=\\\"form-control\\\" id=\\\"senha\\\"\\n                    placeholder=\\\"Mínimo 6 caracteres\\\">\\n\\n                <div *ngIf=\\\"formUtils.showFieldError(form.get('senha'))\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"form.get('senha').errors.required\\\">Campo obrigatório</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-sm-2\\\"></div>\\n            <div class=\\\"col-sm-10\\\">\\n                <button [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Entrar</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","import { FormUtils } from './../shared/form.utils';\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n    selector: 'sign-in-form',\n    templateUrl: './sign-in-form.component.html'\n})\n\nexport class signInFormComponent {\n    public form: FormGroup\n    public formUtils: FormUtils\n\n    public constructor(private fb: FormBuilder){\n        this.form = this.fb.group({\n            email: [null, [Validators.required, Validators.email]],\n            senha: [null, Validators.required]\n        })\n\n        this.formUtils = new FormUtils(this.form)\n    }\n\n    public signInUser(){\n        console.log('Form de SignIn enviado!')\n        console.log(this.form.value)\n    }\n}","module.exports = \"<h1>Faça o seu cadastro</h1>\\n<div class=\\\"jumbotron\\\">\\n    <form class=\\\"text-right\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"signUpUser()\\\">\\n        <div class=\\\"form-group row\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('nome')\\\">\\n            <label for=\\\"nome\\\" class=\\\"col-sm-2 col-form-label\\\">Nome</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"nome\\\" class=\\\"form-control\\\" id=\\\"nome\\\"\\n                    placeholder=\\\"Digite seu nome completo\\\">\\n\\n                <div *ngIf=\\\"formUtils.showFieldError(form.get('nome'))\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"form.get('nome').errors.required\\\">Campo obrigatório</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('email')\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n                    placeholder=\\\"Ex: nome@email.com\\\">\\n\\n                <div *ngIf=\\\"formUtils.showFieldError(form.get('email'))\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"form.get('email').errors.required\\\">Campo obrigatório</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('senha')\\\">\\n            <label for=\\\"senha\\\" class=\\\"col-sm-2 col-form-label\\\">Senha</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"password\\\" formControlName=\\\"senha\\\" class=\\\"form-control\\\" id=\\\"senha\\\"\\n                    placeholder=\\\"Mínimo 6 caracteres\\\">\\n\\n                <div *ngIf=\\\"formUtils.showFieldError(form.get('senha'))\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"form.get('senha').errors.required\\\">Campo obrigatório</div>\\n                    <div *ngIf=\\\"form.get('senha').errors.minLength\\\">Mínimo 6 caracteres</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('confirmacaoSenha')\\\">\\n            <label for=\\\"confirmacaoSenha\\\" class=\\\"col-sm-2 col-form-label\\\">Confirme sua senha</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"password\\\" formControlName=\\\"confirmacaoSenha\\\" class=\\\"form-control\\\" id=\\\"confirmacaoSenha\\\"\\n                    placeholder=\\\"Mínimo 6 caracteres\\\">\\n\\n                <div *ngIf=\\\"formUtils.showFieldError(form.get('confirmacaoSenha'))\\\" class=\\\"text-danger\\\">\\n                    <div *ngIf=\\\"form.get('confirmacaoSenha').errors.required\\\">Campo obrigatório</div>\\n                    <div *ngIf=\\\"form.get('confirmacaoSenha').errors.mismatch\\\">Campo não confere com a senha</div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-sm-2\\\"></div>\\n            <div class=\\\"col-sm-10\\\">\\n                <button [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Cadastrar</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","import { FormUtils } from './../shared/form.utils';\nimport { Component } from \"@angular/core\";\n\nimport { FormGroup, FormControl, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n    selector: 'sign-up-form',\n    templateUrl: './sign-up-form.component.html'\n})\n\nexport class signUpFormComponent {\n    public form: FormGroup;\n\n    public taskStatusOptions: Array<any>\n    public formUtils: FormUtils\n\n    public constructor(private fb: FormBuilder) {\n        this.form = this.fb.group({\n             nome: [null, Validators.required],\n             email: [null, [Validators.required, Validators.email]],\n             senha: [null, [Validators.required, Validators.minLength(6)]],\n             confirmacaoSenha: [null, [Validators.required, Validators.minLength(6)]]\n        }, { validador: this.passwordConfirmationValidator })\n\n        this.formUtils = new FormUtils(this.form)\n    }\n\n    public signUpUser(){\n        console.log(\"Form de SignUp enviado!\")\n        console.log(this.form.value)\n    }\n\n    public passwordConfirmationValidator(form: FormGroup){\n        if(form.get('senha').dirty && form.get('senha').value === form.get('confirmacaoSenha').value)\n            form.get('confirmacaoSenha').setErrors(null)\n        else\n            form.get('confirmacaoSenha').setErrors({'mismatch': true})\n    }\n}","export class Task {\n  \n    constructor(\n      public id: number, \n      public titulo: string,\n      public descricao?: string,\n      public status?: boolean,\n      public data?: string\n    ){\n    }\n  }","import { Headers, Http } from '@angular/http'\nimport { Injectable } from '@angular/core'\n\nimport { Task } from './task.model'\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\n\nexport class TaskService {\n\n    public tasksUrl = 'api/tasks'\n    public headers = new Headers({ 'Content-type': 'application/json' })\n\n    public constructor(private http: Http) { }\n\n    public getAll(): Observable<Task[]> {\n        try {\n            return this.http.get(this.tasksUrl)\n                .pipe(\n                    map(response => {\n                        // console.log('getTastks => ', response.json())\n                        return response.json() as Task[]\n                    })\n\n                )\n        } catch (error) {\n            this.handleErrors(error)\n        }\n    }\n\n    public getImportant(): Observable<Task[]> {\n        try {\n            return this.getAll()\n                .pipe(map(tasks => tasks.slice(0, 3)))\n        } catch (error) {\n            this.handleErrors(error)\n        }\n    }\n\n    public getById(id: number): Observable<Task> {\n        try {\n            let url = `${this.tasksUrl}/${id}`\n            return this.http.get(url)\n                .pipe(map(response => response.json() as Task))\n        } catch (error) {\n            this.handleErrors(error)\n        }\n    }\n\n    public create(task: Task): Observable<Task> {\n        try {\n            let url = this.tasksUrl\n            let body = JSON.stringify(task)\n            return this.http.post(url, body, { headers: this.headers })\n                .pipe(map(response => response.json() as Task))\n        } catch (error) {\n            this.handleErrors(error)\n        }\n    }\n\n    public update(task: Task): Observable<Task> {\n        try {\n            let url = `${this.tasksUrl}/${task.id}`\n            let body = JSON.stringify(task)\n            return this.http.put(url, body, { headers: this.headers })\n                .pipe(map(() => task))\n        } catch (error) {\n            this.handleErrors(error)\n        }\n    }\n\n    public delete(id: number): Observable<null> {\n        try {\n            let url = `${this.tasksUrl}/${id}`\n            return this.http.delete(url, { headers: this.headers })\n                .pipe(map(() => null))\n        } catch (error) {\n            this.handleErrors(error)\n        }\n    }\n\n    public searchByTitle(termo: string): Observable<Task[]> {\n        try {\n            let url = `${this.tasksUrl}?titulo=${termo}`\n    \n            return this.http.get(url)\n                .pipe(map((response) => response.json() as Task[]))\n        } catch (error) {\n            this.handleErrors(error)\n        }\n    }\n\n    private handleErrors(error: Response) {\n        console.log(\"Salvando o erro num arquivo de log. Detalhe: \", error)\n        return Observable.throw(error)\n    }\n\n}","module.exports = \"<h1 class=\\\"page-header\\\">Detalhes da Tarefa: {{task.titulo}} </h1>\\n\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"updateTask()\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-6\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('titulo')\\\">\\n            <label for=\\\"titulo\\\" class=\\\"control-label\\\">Título</label>\\n            <input formControlName=\\\"titulo\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"titulo\\\">\\n\\n            <div *ngIf=\\\"formUtils.showFieldError(form.get('titulo'))\\\" class=\\\"text-danger\\\">\\n                <div *ngIf=\\\"form.get('titulo').errors.required\\\">Campo obrigatório</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group col-md-3\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('data')\\\">\\n            <label for=\\\"data\\\" class=\\\"control-label\\\">Data</label>\\n            <input formControlName=\\\"data\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"data\\\">\\n\\n            <div *ngIf=\\\"formUtils.showFieldError(form.get('data'))\\\" class=\\\"text-danger\\\">\\n                <div *ngIf=\\\"form.get('data').errors.required\\\">Campo obrigatório</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group col-md-3\\\" [ngClass]=\\\"formUtils.fieldClassForErrorOrSuccess('status')\\\">\\n            <label for=\\\"status\\\" class=\\\"control-label\\\">Status</label>\\n            <select formControlName=\\\"status\\\" class=\\\"form-control\\\" id=\\\"status\\\">\\n                <option *ngFor=\\\"let option of taskStatusOptions\\\" [value]=\\\"option.value\\\">{{option.text}}</option>\\n            </select>\\n\\n            <div *ngIf=\\\"formUtils.showFieldError(form.get('status'))\\\" class=\\\"text-danger\\\">\\n                <div *ngIf=\\\"form.get('status').errors.required\\\">Campo obrigatório</div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"form-group col-md-12\\\">\\n            <label for=\\\"descricao\\\" class=\\\"control-label\\\">Descrição</label>\\n            <textarea formControlName=\\\"descricao\\\" class=\\\"form-control\\\" id=\\\"descricao\\\" rows=\\\"4\\\"></textarea>\\n        </div>\\n    </div>\\n\\n    <button type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-default\\\">Voltar</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"form.invalid\\\">Atualizar</button>\\n</form>\\n\\n<br>\\n<pre>{{form.value | json}}</pre>\"","import { FormUtils } from './../../shared/form.utils';\nimport { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common'\n\nimport { switchMap } from 'rxjs/operators';\n\nimport { Task } from '../shared/task.model'\nimport { TaskService } from '../shared/task.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'task-detail',\n    templateUrl: './task-detail.component.html', \n})\n\nexport class TaskDetailComponent implements OnInit {\n\n    public form: FormGroup;\n    public task: Task\n\n    public taskStatusOptions: Array<any>\n    public formUtils: FormUtils\n\n    public constructor(\n        private route: ActivatedRoute,\n        private taskService: TaskService, \n        private location: Location,\n        private fb: FormBuilder\n    ){\n        this.taskStatusOptions = [\n            { value: false, text: 'Pendente' },\n            { value: true, text: 'Concluído' }\n        ]\n\n        this.form = this.fb.group({\n            titulo: [null, Validators.required],\n            data: [null, Validators.required],\n            status: [null, Validators.required],\n            descricao: [null]\n        })\n\n        this.formUtils = new FormUtils(this.form)\n    }\n\n    public ngOnInit() {\n        this.task = new Task(null, null)\n\n        this.route.params\n            .pipe(switchMap((params: Params) => this.taskService.getById(+params['id'])))\n                .subscribe(\n                    task => this.setTask(task),\n                    () => alert('Ocorreu um erro no servidor. Tente mais tarde!')\n                )\n    }\n\n    public setTask(task: Task): void {\n        this.task = task\n        this.form.patchValue(task)\n    }\n\n    public ngAfterViewInit(){\n        $('#data').datetimepicker({\n            'sideBySide': true,\n            'locale': 'pt-br'\n        }).on('dp.change', ()=> this.form.get('data').setValue($(\"#data\").val()))\n    }\n\n    public goBack() {\n        this.location.back()\n    }\n\n    public updateTask(){\n        this.task.titulo = this.form.get('titulo').value\n        this.task.data = this.form.get('data').value\n        this.task.status = this.form.get('status').value\n        this.task.descricao = this.form.get('descricao').value\n\n        if(!this.task.titulo){\n            alert('A tarefa deve ter um título.')\n        } else {\n            this.taskService.update(this.task)\n                .subscribe(\n                    () => alert('Tafera atualizada com sucesso!'),\n                    () => alert('Ocorreu um erro no servidor. Tente mais tarde!')\n                )\n        }\n    } \n\n}","module.exports = \"<h1 class=\\\"page-header\\\">Lista de Tarefas</h1>\\n\\n<div class=\\\"jumbotron\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newTask.titulo\\\" placeholder=\\\"Adicione uma nova tarefa\\\">\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"createTask()\\\">Adicionar</button>\\n        </div>\\n    </div>\\n</div>\\n\\n<table class=\\\"table\\\">\\n    <thead>\\n        <tr>\\n            <th>Id</th>\\n            <th>Título</th>\\n            <th>Ações</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let task of tasks\\\">\\n            <td>{{task.id}}</td>\\n            <td>{{task.titulo}}</td>\\n            <td>\\n                <button class=\\\"btn btn-info\\\" [routerLink]=\\\"['/tasks', task.id]\\\">\\n                    Detalhes\\n                </button>&nbsp;\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteTask(task)\\\">\\n                    Excluir\\n                </button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core'\n\nimport { Task } from './shared/task.model'\nimport { TaskService } from './shared/task.service';\n\n@Component({\n    selector: 'tasks',\n    templateUrl: './tasks.component.html'\n})\n\nexport class TasksComponent implements OnInit {\n    public tasks: Array<Task>\n    public newTask: Task\n\n    public constructor(private taskService: TaskService) {\n        this.newTask = new Task(null, '')\n    }\n\n    public ngOnInit() {\n        this.taskService.getAll()\n            .subscribe(\n                tasks => {\n                    this.tasks = tasks\n                    // console.log(tasks)\n                },\n                () => alert('Ocorreu um erro no servidor. Tente mais tarde!')\n            )\n    }\n\n    public createTask(){\n        this.newTask.titulo = this.newTask.titulo.trim()\n\n        if(!this.newTask.titulo){\n            alert('A tarefa deve ter um título.')\n        } else {\n            this.taskService.create(this.newTask)\n                .subscribe(\n                    (task) => {\n                        this.tasks.push(task)\n                        this.newTask = new Task(null, '')\n                    },\n                    () => alert('Ocorreu um erro no servidor. Tente mais tarde!')\n                )\n        }\n    }\n\n    public deleteTask(task: Task){\n        if(confirm(`Deseja excluir a tarefa ${task.titulo}?`)){\n            this.taskService.delete(task.id)\n                .subscribe(\n                    () => this.tasks = this.tasks.filter(t => t !== task),\n                    () => alert('Ocorreu um erro no servidor, Tente mais tarde!')\n                )\n        }\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}